# Generated by Django 3.0.5 on 2021-01-07 18:40

import autoslug.fields
import ckeditor_uploader.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, choices=[('Beaches', 'Beaches'), ('Treks', 'Treks'), ('Glaciers', 'Glaciers'), ('Summit', 'Summit'), ('Islands', 'Islands'), ('Hiking', 'Hiking'), ('Camping', 'Camping'), ('Mountains', 'Mountains'), ('Deserts', 'Deserts'), ('Forests', 'Forests'), ('Historic', 'Historic'), ('Monuments', 'Monuments'), ('Temples', 'Temples'), ('Museums', 'Museums'), ('Zoos', 'Zoos'), ('ThemeParks', 'ThemeParks'), ('Gardens', 'Gardens'), ('Aquaria', 'Aquaria'), ('Winter', 'Winter'), ('Market', 'Market'), ('Urban', 'Urban'), ('Rural', 'Rural'), ('Rivers', 'Rivers'), ('Lakes', 'Lakes'), ('Couple', 'Couple'), ('Sports', 'Sports'), ('Food', 'Food '), ('Resorts', 'Resorts'), ('Culture', 'Culture'), ('Adventure', 'Adventure'), ('MotoBlogs', 'MotoBlogs'), ('Solo', 'Solo'), ('Summer', 'Summer'), ('TravelTips', 'TravelTips'), ('Photography', 'Photography'), ('WFM', 'WFM')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80)),
                ('email', models.EmailField(max_length=100)),
                ('mobile', models.CharField(blank=True, max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(max_length=500)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title')),
                ('cover', sorl.thumbnail.fields.ImageField(null=True, upload_to='images/')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Publish')], default=0)),
                ('state', models.CharField(choices=[('Somewhere In India', 'Somewhere In India'), ('Out Of India', 'Out Of India'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Chandigarh', 'Chandigarh'), ('Dadra and Nagar Haveli', 'Dadra and Nagar Haveli'), ('Daman and Diu', 'Daman and Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu and Kashmir', 'Jammu and Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Orissa', 'Orissa'), ('Punjab', 'Punjab'), ('Pondicherry', 'Pondicherry'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal')], default='Somewhere In India', max_length=80)),
                ('slug_st', autoslug.fields.AutoSlugField(editable=False, populate_from='state')),
                ('location', models.CharField(max_length=200)),
                ('slug_lc', autoslug.fields.AutoSlugField(editable=False, populate_from='location')),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(blank=True, related_name='posts', to='blog.Category')),
                ('like', models.ManyToManyField(blank=True, related_name='post_liked', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=150)),
                ('signup_confirmation', models.BooleanField(default=False)),
                ('facebook_link', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_link', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('Website', models.CharField(blank=True, max_length=100, null=True)),
                ('youtube_channel', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=40)),
                ('session', models.CharField(max_length=40)),
                ('created', models.DateTimeField(default=datetime.datetime(2021, 1, 8, 0, 10, 20, 691644))),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_views', to='blog.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=100)),
                ('body', models.TextField(max_length=80)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.Post')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
    ]
